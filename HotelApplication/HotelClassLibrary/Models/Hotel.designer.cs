#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelClassLibrary.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Hotel")]
	public partial class HotelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertCleaningSchedule(CleaningSchedule instance);
    partial void UpdateCleaningSchedule(CleaningSchedule instance);
    partial void DeleteCleaningSchedule(CleaningSchedule instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertFloor(Floor instance);
    partial void UpdateFloor(Floor instance);
    partial void DeleteFloor(Floor instance);
    partial void InsertHistoryRegistrationHotel(HistoryRegistrationHotel instance);
    partial void UpdateHistoryRegistrationHotel(HistoryRegistrationHotel instance);
    partial void DeleteHistoryRegistrationHotel(HistoryRegistrationHotel instance);
    partial void InsertHotelRoom(HotelRoom instance);
    partial void UpdateHotelRoom(HotelRoom instance);
    partial void DeleteHotelRoom(HotelRoom instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertTypesHotelRoom(TypesHotelRoom instance);
    partial void UpdateTypesHotelRoom(TypesHotelRoom instance);
    partial void DeleteTypesHotelRoom(TypesHotelRoom instance);
    partial void InsertDaysOfWeek(DaysOfWeek instance);
    partial void UpdateDaysOfWeek(DaysOfWeek instance);
    partial void DeleteDaysOfWeek(DaysOfWeek instance);
    partial void InsertCleaningHistory(CleaningHistory instance);
    partial void UpdateCleaningHistory(CleaningHistory instance);
    partial void DeleteCleaningHistory(CleaningHistory instance);
    #endregion
		
		public HotelDataContext() : 
				base(global::HotelClassLibrary.Properties.Settings.Default.HotelConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HotelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<CleaningSchedule> CleaningSchedules
		{
			get
			{
				return this.GetTable<CleaningSchedule>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Floor> Floors
		{
			get
			{
				return this.GetTable<Floor>();
			}
		}
		
		public System.Data.Linq.Table<HistoryRegistrationHotel> HistoryRegistrationHotels
		{
			get
			{
				return this.GetTable<HistoryRegistrationHotel>();
			}
		}
		
		public System.Data.Linq.Table<HotelRoom> HotelRooms
		{
			get
			{
				return this.GetTable<HotelRoom>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<TypesHotelRoom> TypesHotelRooms
		{
			get
			{
				return this.GetTable<TypesHotelRoom>();
			}
		}
		
		public System.Data.Linq.Table<DaysOfWeek> DaysOfWeeks
		{
			get
			{
				return this.GetTable<DaysOfWeek>();
			}
		}
		
		public System.Data.Linq.Table<CleaningHistory> CleaningHistories
		{
			get
			{
				return this.GetTable<CleaningHistory>();
			}
		}
		
		public System.Data.Linq.Table<CitiesView> CitiesViews
		{
			get
			{
				return this.GetTable<CitiesView>();
			}
		}
		
		public System.Data.Linq.Table<CleaningHistoryView> CleaningHistoryViews
		{
			get
			{
				return this.GetTable<CleaningHistoryView>();
			}
		}
		
		public System.Data.Linq.Table<CleaningScheduleView> CleaningScheduleViews
		{
			get
			{
				return this.GetTable<CleaningScheduleView>();
			}
		}
		
		public System.Data.Linq.Table<ClientsView> ClientsViews
		{
			get
			{
				return this.GetTable<ClientsView>();
			}
		}
		
		public System.Data.Linq.Table<DaysOfWeekView> DaysOfWeekViews
		{
			get
			{
				return this.GetTable<DaysOfWeekView>();
			}
		}
		
		public System.Data.Linq.Table<EmployeesView> EmployeesViews
		{
			get
			{
				return this.GetTable<EmployeesView>();
			}
		}
		
		public System.Data.Linq.Table<FloorsView> FloorsViews
		{
			get
			{
				return this.GetTable<FloorsView>();
			}
		}
		
		public System.Data.Linq.Table<HistoryRegistrationHotelView> HistoryRegistrationHotelViews
		{
			get
			{
				return this.GetTable<HistoryRegistrationHotelView>();
			}
		}
		
		public System.Data.Linq.Table<HotelRoomsView> HotelRoomsViews
		{
			get
			{
				return this.GetTable<HotelRoomsView>();
			}
		}
		
		public System.Data.Linq.Table<PersonsView> PersonsViews
		{
			get
			{
				return this.GetTable<PersonsView>();
			}
		}
		
		public System.Data.Linq.Table<TypesHotelRoomView> TypesHotelRoomViews
		{
			get
			{
				return this.GetTable<TypesHotelRoomView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<HistoryRegistrationHotel> _HistoryRegistrationHotels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public City()
		{
			this._HistoryRegistrationHotels = new EntitySet<HistoryRegistrationHotel>(new Action<HistoryRegistrationHotel>(this.attach_HistoryRegistrationHotels), new Action<HistoryRegistrationHotel>(this.detach_HistoryRegistrationHotels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_HistoryRegistrationHotel", Storage="_HistoryRegistrationHotels", ThisKey="Id", OtherKey="IdCity")]
		public EntitySet<HistoryRegistrationHotel> HistoryRegistrationHotels
		{
			get
			{
				return this._HistoryRegistrationHotels;
			}
			set
			{
				this._HistoryRegistrationHotels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleaningSchedule")]
	public partial class CleaningSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdDayOfWeek;
		
		private int _IdEmployee;
		
		private int _IdFloor;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Floor> _Floor;
		
		private EntityRef<DaysOfWeek> _DaysOfWeek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdDayOfWeekChanging(int value);
    partial void OnIdDayOfWeekChanged();
    partial void OnIdEmployeeChanging(int value);
    partial void OnIdEmployeeChanged();
    partial void OnIdFloorChanging(int value);
    partial void OnIdFloorChanged();
    #endregion
		
		public CleaningSchedule()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Floor = default(EntityRef<Floor>);
			this._DaysOfWeek = default(EntityRef<DaysOfWeek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDayOfWeek", DbType="Int NOT NULL")]
		public int IdDayOfWeek
		{
			get
			{
				return this._IdDayOfWeek;
			}
			set
			{
				if ((this._IdDayOfWeek != value))
				{
					if (this._DaysOfWeek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDayOfWeekChanging(value);
					this.SendPropertyChanging();
					this._IdDayOfWeek = value;
					this.SendPropertyChanged("IdDayOfWeek");
					this.OnIdDayOfWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmployee", DbType="Int NOT NULL")]
		public int IdEmployee
		{
			get
			{
				return this._IdEmployee;
			}
			set
			{
				if ((this._IdEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IdEmployee = value;
					this.SendPropertyChanged("IdEmployee");
					this.OnIdEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFloor", DbType="Int NOT NULL")]
		public int IdFloor
		{
			get
			{
				return this._IdFloor;
			}
			set
			{
				if ((this._IdFloor != value))
				{
					if (this._Floor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFloorChanging(value);
					this.SendPropertyChanging();
					this._IdFloor = value;
					this.SendPropertyChanged("IdFloor");
					this.OnIdFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CleaningSchedule", Storage="_Employee", ThisKey="IdEmployee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CleaningSchedules.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CleaningSchedules.Add(this);
						this._IdEmployee = value.Id;
					}
					else
					{
						this._IdEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_CleaningSchedule", Storage="_Floor", ThisKey="IdFloor", OtherKey="Id", IsForeignKey=true)]
		public Floor Floor
		{
			get
			{
				return this._Floor.Entity;
			}
			set
			{
				Floor previousValue = this._Floor.Entity;
				if (((previousValue != value) 
							|| (this._Floor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Floor.Entity = null;
						previousValue.CleaningSchedules.Remove(this);
					}
					this._Floor.Entity = value;
					if ((value != null))
					{
						value.CleaningSchedules.Add(this);
						this._IdFloor = value.Id;
					}
					else
					{
						this._IdFloor = default(int);
					}
					this.SendPropertyChanged("Floor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaysOfWeek_CleaningSchedule", Storage="_DaysOfWeek", ThisKey="IdDayOfWeek", OtherKey="Id", IsForeignKey=true)]
		public DaysOfWeek DaysOfWeek
		{
			get
			{
				return this._DaysOfWeek.Entity;
			}
			set
			{
				DaysOfWeek previousValue = this._DaysOfWeek.Entity;
				if (((previousValue != value) 
							|| (this._DaysOfWeek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DaysOfWeek.Entity = null;
						previousValue.CleaningSchedules.Remove(this);
					}
					this._DaysOfWeek.Entity = value;
					if ((value != null))
					{
						value.CleaningSchedules.Add(this);
						this._IdDayOfWeek = value.Id;
					}
					else
					{
						this._IdDayOfWeek = default(int);
					}
					this.SendPropertyChanged("DaysOfWeek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPerson;
		
		private string _Passport;
		
		private EntitySet<HistoryRegistrationHotel> _HistoryRegistrationHotels;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonChanging(int value);
    partial void OnIdPersonChanged();
    partial void OnPassportChanging(string value);
    partial void OnPassportChanged();
    #endregion
		
		public Client()
		{
			this._HistoryRegistrationHotels = new EntitySet<HistoryRegistrationHotel>(new Action<HistoryRegistrationHotel>(this.attach_HistoryRegistrationHotels), new Action<HistoryRegistrationHotel>(this.detach_HistoryRegistrationHotels));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPerson", DbType="Int NOT NULL")]
		public int IdPerson
		{
			get
			{
				return this._IdPerson;
			}
			set
			{
				if ((this._IdPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonChanging(value);
					this.SendPropertyChanging();
					this._IdPerson = value;
					this.SendPropertyChanged("IdPerson");
					this.OnIdPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this.OnPassportChanging(value);
					this.SendPropertyChanging();
					this._Passport = value;
					this.SendPropertyChanged("Passport");
					this.OnPassportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_HistoryRegistrationHotel", Storage="_HistoryRegistrationHotels", ThisKey="Id", OtherKey="IdClient")]
		public EntitySet<HistoryRegistrationHotel> HistoryRegistrationHotels
		{
			get
			{
				return this._HistoryRegistrationHotels;
			}
			set
			{
				this._HistoryRegistrationHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Client", Storage="_Person", ThisKey="IdPerson", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._IdPerson = value.Id;
					}
					else
					{
						this._IdPerson = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdPerson;
		
		private bool _WorkState;
		
		private EntitySet<CleaningSchedule> _CleaningSchedules;
		
		private EntitySet<CleaningHistory> _CleaningHistories;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdPersonChanging(int value);
    partial void OnIdPersonChanged();
    partial void OnWorkStateChanging(bool value);
    partial void OnWorkStateChanged();
    #endregion
		
		public Employee()
		{
			this._CleaningSchedules = new EntitySet<CleaningSchedule>(new Action<CleaningSchedule>(this.attach_CleaningSchedules), new Action<CleaningSchedule>(this.detach_CleaningSchedules));
			this._CleaningHistories = new EntitySet<CleaningHistory>(new Action<CleaningHistory>(this.attach_CleaningHistories), new Action<CleaningHistory>(this.detach_CleaningHistories));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPerson", DbType="Int NOT NULL")]
		public int IdPerson
		{
			get
			{
				return this._IdPerson;
			}
			set
			{
				if ((this._IdPerson != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPersonChanging(value);
					this.SendPropertyChanging();
					this._IdPerson = value;
					this.SendPropertyChanged("IdPerson");
					this.OnIdPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkState", DbType="Bit NOT NULL")]
		public bool WorkState
		{
			get
			{
				return this._WorkState;
			}
			set
			{
				if ((this._WorkState != value))
				{
					this.OnWorkStateChanging(value);
					this.SendPropertyChanging();
					this._WorkState = value;
					this.SendPropertyChanged("WorkState");
					this.OnWorkStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CleaningSchedule", Storage="_CleaningSchedules", ThisKey="Id", OtherKey="IdEmployee")]
		public EntitySet<CleaningSchedule> CleaningSchedules
		{
			get
			{
				return this._CleaningSchedules;
			}
			set
			{
				this._CleaningSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CleaningHistory", Storage="_CleaningHistories", ThisKey="Id", OtherKey="IdEmployee")]
		public EntitySet<CleaningHistory> CleaningHistories
		{
			get
			{
				return this._CleaningHistories;
			}
			set
			{
				this._CleaningHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Employee", Storage="_Person", ThisKey="IdPerson", OtherKey="Id", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._IdPerson = value.Id;
					}
					else
					{
						this._IdPerson = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_CleaningHistories(CleaningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CleaningHistories(CleaningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Floors")]
	public partial class Floor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Number;
		
		private EntitySet<CleaningSchedule> _CleaningSchedules;
		
		private EntitySet<HotelRoom> _HotelRooms;
		
		private EntitySet<CleaningHistory> _CleaningHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public Floor()
		{
			this._CleaningSchedules = new EntitySet<CleaningSchedule>(new Action<CleaningSchedule>(this.attach_CleaningSchedules), new Action<CleaningSchedule>(this.detach_CleaningSchedules));
			this._HotelRooms = new EntitySet<HotelRoom>(new Action<HotelRoom>(this.attach_HotelRooms), new Action<HotelRoom>(this.detach_HotelRooms));
			this._CleaningHistories = new EntitySet<CleaningHistory>(new Action<CleaningHistory>(this.attach_CleaningHistories), new Action<CleaningHistory>(this.detach_CleaningHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_CleaningSchedule", Storage="_CleaningSchedules", ThisKey="Id", OtherKey="IdFloor")]
		public EntitySet<CleaningSchedule> CleaningSchedules
		{
			get
			{
				return this._CleaningSchedules;
			}
			set
			{
				this._CleaningSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_HotelRoom", Storage="_HotelRooms", ThisKey="Id", OtherKey="IdFloor")]
		public EntitySet<HotelRoom> HotelRooms
		{
			get
			{
				return this._HotelRooms;
			}
			set
			{
				this._HotelRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_CleaningHistory", Storage="_CleaningHistories", ThisKey="Id", OtherKey="IdFloor")]
		public EntitySet<CleaningHistory> CleaningHistories
		{
			get
			{
				return this._CleaningHistories;
			}
			set
			{
				this._CleaningHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Floor = this;
		}
		
		private void detach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Floor = null;
		}
		
		private void attach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Floor = this;
		}
		
		private void detach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.Floor = null;
		}
		
		private void attach_CleaningHistories(CleaningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Floor = this;
		}
		
		private void detach_CleaningHistories(CleaningHistory entity)
		{
			this.SendPropertyChanging();
			entity.Floor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryRegistrationHotel")]
	public partial class HistoryRegistrationHotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdClient;
		
		private int _IdHotelRoom;
		
		private int _IdCity;
		
		private System.DateTime _RegistrationDate;
		
		private int _Duration;
		
		private EntityRef<City> _City;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<HotelRoom> _HotelRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdClientChanging(int value);
    partial void OnIdClientChanged();
    partial void OnIdHotelRoomChanging(int value);
    partial void OnIdHotelRoomChanged();
    partial void OnIdCityChanging(int value);
    partial void OnIdCityChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    #endregion
		
		public HistoryRegistrationHotel()
		{
			this._City = default(EntityRef<City>);
			this._Client = default(EntityRef<Client>);
			this._HotelRoom = default(EntityRef<HotelRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdClient", DbType="Int NOT NULL")]
		public int IdClient
		{
			get
			{
				return this._IdClient;
			}
			set
			{
				if ((this._IdClient != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClientChanging(value);
					this.SendPropertyChanging();
					this._IdClient = value;
					this.SendPropertyChanged("IdClient");
					this.OnIdClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHotelRoom", DbType="Int NOT NULL")]
		public int IdHotelRoom
		{
			get
			{
				return this._IdHotelRoom;
			}
			set
			{
				if ((this._IdHotelRoom != value))
				{
					if (this._HotelRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHotelRoomChanging(value);
					this.SendPropertyChanging();
					this._IdHotelRoom = value;
					this.SendPropertyChanged("IdHotelRoom");
					this.OnIdHotelRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCity", DbType="Int NOT NULL")]
		public int IdCity
		{
			get
			{
				return this._IdCity;
			}
			set
			{
				if ((this._IdCity != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCityChanging(value);
					this.SendPropertyChanging();
					this._IdCity = value;
					this.SendPropertyChanged("IdCity");
					this.OnIdCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="Date NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_HistoryRegistrationHotel", Storage="_City", ThisKey="IdCity", OtherKey="Id", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.HistoryRegistrationHotels.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.HistoryRegistrationHotels.Add(this);
						this._IdCity = value.Id;
					}
					else
					{
						this._IdCity = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_HistoryRegistrationHotel", Storage="_Client", ThisKey="IdClient", OtherKey="Id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.HistoryRegistrationHotels.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.HistoryRegistrationHotels.Add(this);
						this._IdClient = value.Id;
					}
					else
					{
						this._IdClient = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelRoom_HistoryRegistrationHotel", Storage="_HotelRoom", ThisKey="IdHotelRoom", OtherKey="Id", IsForeignKey=true)]
		public HotelRoom HotelRoom
		{
			get
			{
				return this._HotelRoom.Entity;
			}
			set
			{
				HotelRoom previousValue = this._HotelRoom.Entity;
				if (((previousValue != value) 
							|| (this._HotelRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HotelRoom.Entity = null;
						previousValue.HistoryRegistrationHotels.Remove(this);
					}
					this._HotelRoom.Entity = value;
					if ((value != null))
					{
						value.HistoryRegistrationHotels.Add(this);
						this._IdHotelRoom = value.Id;
					}
					else
					{
						this._IdHotelRoom = default(int);
					}
					this.SendPropertyChanged("HotelRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelRooms")]
	public partial class HotelRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdTypeHotelRoom;
		
		private int _IdFloor;
		
		private int _Number;
		
		private bool _State;
		
		private EntitySet<HistoryRegistrationHotel> _HistoryRegistrationHotels;
		
		private EntityRef<Floor> _Floor;
		
		private EntityRef<TypesHotelRoom> _TypesHotelRoom;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdTypeHotelRoomChanging(int value);
    partial void OnIdTypeHotelRoomChanged();
    partial void OnIdFloorChanging(int value);
    partial void OnIdFloorChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnStateChanging(bool value);
    partial void OnStateChanged();
    #endregion
		
		public HotelRoom()
		{
			this._HistoryRegistrationHotels = new EntitySet<HistoryRegistrationHotel>(new Action<HistoryRegistrationHotel>(this.attach_HistoryRegistrationHotels), new Action<HistoryRegistrationHotel>(this.detach_HistoryRegistrationHotels));
			this._Floor = default(EntityRef<Floor>);
			this._TypesHotelRoom = default(EntityRef<TypesHotelRoom>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypeHotelRoom", DbType="Int NOT NULL")]
		public int IdTypeHotelRoom
		{
			get
			{
				return this._IdTypeHotelRoom;
			}
			set
			{
				if ((this._IdTypeHotelRoom != value))
				{
					if (this._TypesHotelRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypeHotelRoomChanging(value);
					this.SendPropertyChanging();
					this._IdTypeHotelRoom = value;
					this.SendPropertyChanged("IdTypeHotelRoom");
					this.OnIdTypeHotelRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFloor", DbType="Int NOT NULL")]
		public int IdFloor
		{
			get
			{
				return this._IdFloor;
			}
			set
			{
				if ((this._IdFloor != value))
				{
					if (this._Floor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFloorChanging(value);
					this.SendPropertyChanging();
					this._IdFloor = value;
					this.SendPropertyChanged("IdFloor");
					this.OnIdFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Bit NOT NULL")]
		public bool State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HotelRoom_HistoryRegistrationHotel", Storage="_HistoryRegistrationHotels", ThisKey="Id", OtherKey="IdHotelRoom")]
		public EntitySet<HistoryRegistrationHotel> HistoryRegistrationHotels
		{
			get
			{
				return this._HistoryRegistrationHotels;
			}
			set
			{
				this._HistoryRegistrationHotels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_HotelRoom", Storage="_Floor", ThisKey="IdFloor", OtherKey="Id", IsForeignKey=true)]
		public Floor Floor
		{
			get
			{
				return this._Floor.Entity;
			}
			set
			{
				Floor previousValue = this._Floor.Entity;
				if (((previousValue != value) 
							|| (this._Floor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Floor.Entity = null;
						previousValue.HotelRooms.Remove(this);
					}
					this._Floor.Entity = value;
					if ((value != null))
					{
						value.HotelRooms.Add(this);
						this._IdFloor = value.Id;
					}
					else
					{
						this._IdFloor = default(int);
					}
					this.SendPropertyChanged("Floor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesHotelRoom_HotelRoom", Storage="_TypesHotelRoom", ThisKey="IdTypeHotelRoom", OtherKey="Id", IsForeignKey=true)]
		public TypesHotelRoom TypesHotelRoom
		{
			get
			{
				return this._TypesHotelRoom.Entity;
			}
			set
			{
				TypesHotelRoom previousValue = this._TypesHotelRoom.Entity;
				if (((previousValue != value) 
							|| (this._TypesHotelRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TypesHotelRoom.Entity = null;
						previousValue.HotelRooms.Remove(this);
					}
					this._TypesHotelRoom.Entity = value;
					if ((value != null))
					{
						value.HotelRooms.Add(this);
						this._IdTypeHotelRoom = value.Id;
					}
					else
					{
						this._IdTypeHotelRoom = default(int);
					}
					this.SendPropertyChanged("TypesHotelRoom");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.HotelRoom = this;
		}
		
		private void detach_HistoryRegistrationHotels(HistoryRegistrationHotel entity)
		{
			this.SendPropertyChanging();
			entity.HotelRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronymic;
		
		private EntitySet<Client> _Clients;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPatronymicChanging(string value);
    partial void OnPatronymicChanged();
    #endregion
		
		public Person()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this.OnPatronymicChanging(value);
					this.SendPropertyChanging();
					this._Patronymic = value;
					this.SendPropertyChanged("Patronymic");
					this.OnPatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Client", Storage="_Clients", ThisKey="Id", OtherKey="IdPerson")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Employee", Storage="_Employees", ThisKey="Id", OtherKey="IdPerson")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypesHotelRoom")]
	public partial class TypesHotelRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _CountRooms;
		
		private int _Price;
		
		private EntitySet<HotelRoom> _HotelRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountRoomsChanging(int value);
    partial void OnCountRoomsChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public TypesHotelRoom()
		{
			this._HotelRooms = new EntitySet<HotelRoom>(new Action<HotelRoom>(this.attach_HotelRooms), new Action<HotelRoom>(this.detach_HotelRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountRooms", DbType="Int NOT NULL")]
		public int CountRooms
		{
			get
			{
				return this._CountRooms;
			}
			set
			{
				if ((this._CountRooms != value))
				{
					this.OnCountRoomsChanging(value);
					this.SendPropertyChanging();
					this._CountRooms = value;
					this.SendPropertyChanged("CountRooms");
					this.OnCountRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TypesHotelRoom_HotelRoom", Storage="_HotelRooms", ThisKey="Id", OtherKey="IdTypeHotelRoom")]
		public EntitySet<HotelRoom> HotelRooms
		{
			get
			{
				return this._HotelRooms;
			}
			set
			{
				this._HotelRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.TypesHotelRoom = this;
		}
		
		private void detach_HotelRooms(HotelRoom entity)
		{
			this.SendPropertyChanging();
			entity.TypesHotelRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DaysOfWeek")]
	public partial class DaysOfWeek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Number;
		
		private EntitySet<CleaningSchedule> _CleaningSchedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    #endregion
		
		public DaysOfWeek()
		{
			this._CleaningSchedules = new EntitySet<CleaningSchedule>(new Action<CleaningSchedule>(this.attach_CleaningSchedules), new Action<CleaningSchedule>(this.detach_CleaningSchedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DaysOfWeek_CleaningSchedule", Storage="_CleaningSchedules", ThisKey="Id", OtherKey="IdDayOfWeek")]
		public EntitySet<CleaningSchedule> CleaningSchedules
		{
			get
			{
				return this._CleaningSchedules;
			}
			set
			{
				this._CleaningSchedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DaysOfWeek = this;
		}
		
		private void detach_CleaningSchedules(CleaningSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DaysOfWeek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleaningHistory")]
	public partial class CleaningHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdFloor;
		
		private System.DateTime _DateCleaning;
		
		private int _IdEmployee;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Floor> _Floor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdFloorChanging(int value);
    partial void OnIdFloorChanged();
    partial void OnDateCleaningChanging(System.DateTime value);
    partial void OnDateCleaningChanged();
    partial void OnIdEmployeeChanging(int value);
    partial void OnIdEmployeeChanged();
    #endregion
		
		public CleaningHistory()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Floor = default(EntityRef<Floor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFloor", DbType="Int NOT NULL")]
		public int IdFloor
		{
			get
			{
				return this._IdFloor;
			}
			set
			{
				if ((this._IdFloor != value))
				{
					if (this._Floor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFloorChanging(value);
					this.SendPropertyChanging();
					this._IdFloor = value;
					this.SendPropertyChanged("IdFloor");
					this.OnIdFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleaning", DbType="Date NOT NULL")]
		public System.DateTime DateCleaning
		{
			get
			{
				return this._DateCleaning;
			}
			set
			{
				if ((this._DateCleaning != value))
				{
					this.OnDateCleaningChanging(value);
					this.SendPropertyChanging();
					this._DateCleaning = value;
					this.SendPropertyChanged("DateCleaning");
					this.OnDateCleaningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmployee", DbType="Int NOT NULL")]
		public int IdEmployee
		{
			get
			{
				return this._IdEmployee;
			}
			set
			{
				if ((this._IdEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IdEmployee = value;
					this.SendPropertyChanged("IdEmployee");
					this.OnIdEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CleaningHistory", Storage="_Employee", ThisKey="IdEmployee", OtherKey="Id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CleaningHistories.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CleaningHistories.Add(this);
						this._IdEmployee = value.Id;
					}
					else
					{
						this._IdEmployee = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Floor_CleaningHistory", Storage="_Floor", ThisKey="IdFloor", OtherKey="Id", IsForeignKey=true)]
		public Floor Floor
		{
			get
			{
				return this._Floor.Entity;
			}
			set
			{
				Floor previousValue = this._Floor.Entity;
				if (((previousValue != value) 
							|| (this._Floor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Floor.Entity = null;
						previousValue.CleaningHistories.Remove(this);
					}
					this._Floor.Entity = value;
					if ((value != null))
					{
						value.CleaningHistories.Add(this);
						this._IdFloor = value.Id;
					}
					else
					{
						this._IdFloor = default(int);
					}
					this.SendPropertyChanged("Floor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CitiesView")]
	public partial class CitiesView
	{
		
		private int _Id;
		
		private string _Name;
		
		public CitiesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleaningHistoryView")]
	public partial class CleaningHistoryView
	{
		
		private int _Id;
		
		private int _Number;
		
		private System.DateTime _DateCleaning;
		
		private string _Employee;
		
		public CleaningHistoryView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleaning", DbType="Date NOT NULL")]
		public System.DateTime DateCleaning
		{
			get
			{
				return this._DateCleaning;
			}
			set
			{
				if ((this._DateCleaning != value))
				{
					this._DateCleaning = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="NVarChar(66)")]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleaningScheduleView")]
	public partial class CleaningScheduleView
	{
		
		private int _Id;
		
		private string _DayOfWeek;
		
		private string _Employee;
		
		private int _Number;
		
		public CleaningScheduleView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayOfWeek", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DayOfWeek
		{
			get
			{
				return this._DayOfWeek;
			}
			set
			{
				if ((this._DayOfWeek != value))
				{
					this._DayOfWeek = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="NVarChar(66)")]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientsView")]
	public partial class ClientsView
	{
		
		private int _Id;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronymic;
		
		private string _Passport;
		
		public ClientsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this._Patronymic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this._Passport = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DaysOfWeekView")]
	public partial class DaysOfWeekView
	{
		
		private int _Id;
		
		private string _Name;
		
		private int _Number;
		
		public DaysOfWeekView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeesView")]
	public partial class EmployeesView
	{
		
		private int _Id;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronymic;
		
		private bool _WorkState;
		
		public EmployeesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this._Patronymic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkState", DbType="Bit NOT NULL")]
		public bool WorkState
		{
			get
			{
				return this._WorkState;
			}
			set
			{
				if ((this._WorkState != value))
				{
					this._WorkState = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FloorsView")]
	public partial class FloorsView
	{
		
		private int _Id;
		
		private int _Number;
		
		public FloorsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoryRegistrationHotelView")]
	public partial class HistoryRegistrationHotelView
	{
		
		private int _Id;
		
		private string _Client;
		
		private string _Passport;
		
		private int _FloorNumber;
		
		private int _RoomNumber;
		
		private string _City;
		
		private System.DateTime _RegistrationDate;
		
		private int _Duration;
		
		public HistoryRegistrationHotelView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client", DbType="NVarChar(66)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passport", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Passport
		{
			get
			{
				return this._Passport;
			}
			set
			{
				if ((this._Passport != value))
				{
					this._Passport = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNumber", DbType="Int NOT NULL")]
		public int FloorNumber
		{
			get
			{
				return this._FloorNumber;
			}
			set
			{
				if ((this._FloorNumber != value))
				{
					this._FloorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="Int NOT NULL")]
		public int RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this._RoomNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="Date NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this._RegistrationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HotelRoomsView")]
	public partial class HotelRoomsView
	{
		
		private int _Id;
		
		private string _TypeRoom;
		
		private int _CountRooms;
		
		private int _Price;
		
		private int _FloorNumber;
		
		private int _Number;
		
		private bool _State;
		
		public HotelRoomsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeRoom", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TypeRoom
		{
			get
			{
				return this._TypeRoom;
			}
			set
			{
				if ((this._TypeRoom != value))
				{
					this._TypeRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountRooms", DbType="Int NOT NULL")]
		public int CountRooms
		{
			get
			{
				return this._CountRooms;
			}
			set
			{
				if ((this._CountRooms != value))
				{
					this._CountRooms = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNumber", DbType="Int NOT NULL")]
		public int FloorNumber
		{
			get
			{
				return this._FloorNumber;
			}
			set
			{
				if ((this._FloorNumber != value))
				{
					this._FloorNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Bit NOT NULL")]
		public bool State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonsView")]
	public partial class PersonsView
	{
		
		private int _Id;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronymic;
		
		public PersonsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this._Patronymic = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypesHotelRoomView")]
	public partial class TypesHotelRoomView
	{
		
		private int _Id;
		
		private string _Name;
		
		private int _CountRooms;
		
		private int _Price;
		
		public TypesHotelRoomView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountRooms", DbType="Int NOT NULL")]
		public int CountRooms
		{
			get
			{
				return this._CountRooms;
			}
			set
			{
				if ((this._CountRooms != value))
				{
					this._CountRooms = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
